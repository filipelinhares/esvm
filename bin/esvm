#!/bin/bash

ESVM_PATH="$HOME/.esvm"
BIN_PATH="/usr/local/bin"
ESVM_VERSION="0.4.1"

log() {
  printf "  \033[36m==>\033[0m $@\n"
}

abort() {
  printf "\n  \033[31m==x\033[0m $@\n\n" && exit 1
}


indicator() {
  pid=$1

  declare -a spin=("[    ]" "[=   ]" "[==  ]" "[=== ]" "[====]" "[ ===]" "[  ==]" "[   =]")

  while kill -0 $pid 2> /dev/null
  do
    for i in "${spin[@]}"
    do
      printf "\r%s  \033[36m%s\033[0m %s" "$(tput el)" "$i" "$2"
      sleep 0.2
    done
  done

  printf "\r%s  \033[36m==>\033[0m %s" "$(tput el)" "Done"
}

download() {
  log "Downloading elasticsearch-${1}"
  curl --progress-bar -o $ESVM_PATH/$1/elasticsearch-$1.tar.gz https://download.elastic.co/elasticsearch/release/org/elasticsearch/distribution/tar/elasticsearch/$1/elasticsearch-$1.tar.gz
}

check_directory() {
  if [ ! -e $ESVM_PATH/$1 ]; then
    mkdir -p $ESVM_PATH/$1
  fi
}

check_version_installed() {
  if [ -e $ESVM_PATH/$1/elasticsearch-$1 ]; then
    abort "elasticsearch-${1} already installed"
  fi
}

check_version_exist() {
  if [ ! -e $ESVM_PATH/$1 ]; then
    abort "elasticsearch-${1} is not installed"
    abort "Use: esvm install ${1}"
  fi
}

check_arguments() {
  if [ ! $1 ]; then
    display_help
    exit
  fi

  version="[0-9]+\.[0-9]+\.[0-9]"
  if [[ ! $1 =~ $version ]]; then
    abort "elasticsearch-${1} is not a valid version"
    exit
  fi
}

unpack() {
  tar -xf $ESVM_PATH/$1/elasticsearch-$1.tar.gz -C $ESVM_PATH/$1 2> /dev/null & indicator $! "Unpacking"
}

sym_link() {
  ln -s $ESVM_PATH/$1/elasticsearch-$1/bin/elasticsearch $BIN_PATH/elasticsearch 2> /dev/null & indicator $! "Activating elasticsearch-${1}"
}

sym_unlink() {
  rm -rf $BIN_PATH/elasticsearch
}

cleaning() {
  rm -rf $ESVM_PATH/$1/*.tar.gz & indicator $! "Cleaning"
}

delete_version_dir() {
  rm -rf $ESVM_PATH/$1 & indicator $! "Uninstalling"
}

install() {
  check_arguments $1
  check_directory $1
  check_version_installed $1
  download $1
  unpack $1
  cleaning $1
  exit
}

uninstall() {
  check_arguments $1
  check_version_exist
  delete_version_dir $1
  exit
}

use() {
  check_arguments $1
  check_version_exist $1
  sym_unlink $1
  sym_link $1
  exit
}

display_help() {
  cat <<-EOF

  Elasticsearch version manager

  Usage: esvm [commands] [version]
  {$}esvm install 2.3.4

  Commands:
    install         Install a new version
    uninstall       Uninstall a selected version
    use             Active an installed version

  Options:
    -v, --version   Display current version
    -h, --help      Display help information

EOF
}

display_version() {
  printf "esvm: ${ESVM_VERSION}"
}

# Check if has at least one argument
if [ ! $1 ]; then
  display_help
  exit
fi

while test $# -ne 0; do
  case $1 in
    -v|--version) display_version; exit ;;
    -h|--help) display_help; exit ;;
    use) use $2 ;;
    install) install $2 ;;
    uninstall) uninstall $2 ;;
    *) display_help; exit ;;
  esac
done

